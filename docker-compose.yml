version: "3.8"

services:
  app:
    build: .
    container_name: alitehub_server
    ports:
      - "5000:5000"  # Map port 5000
    depends_on:
      rabbitmq:
        condition: service_healthy  # Wait for RabbitMQ to be fully ready
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - CHOKIDAR_USEPOLLING=true  # Ensures file watching works in Docker
    networks:
      - app-network
    command: ["npm", "run", "dev"]  # Ensures TypeScript hot-reloading works

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ communication port
      - "15672:15672" # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persist RabbitMQ data
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  rabbitmq_data:  # Named volume for RabbitMQ persistence

networks:
  app-network:
    driver: bridge
